<?php

namespace OC\PlatformBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends \Doctrine\ORM\EntityRepository
{
  public function myFindAll()
  {
    // methode 1 : en passant par l'entity manager
    $queryBuilder = $this->_em->createQueryBuilder()
    ->select('a')
    ->from($this->_entityName, 'a');


// Dans un repository, $this->_entityName est le namespace de l'entité gérée
// Ici, il vaut donc OC\PlatformBundle\Entity\Advert

// Methode 2 : en passant par le raccourci (je recommande)
$queryBuilder = $this->createQueryBuilder('a');

// on ajoute pas de critère ou tri particulier , la construction de notre requete est finie
// on récupère la query à partir du $queryBuilder
$query = $queryBuilder->getQuery();

// on récupère les résultats à partir de la query
$results = $query->getResult();

// on retourne ces résultats
return $results;
}

public function getAdvertWithCategories(array $categoryNames)
{
  $qb = $this->createQueryBuilder('a');
  $qb
    ->innerJoin('a.categories', 'c')
    ->addSelect('c');

    $qb->where($qb->expr()->in('c.name', $categoryNames));

    return $qb->getQuery()->getResult();
}

public function getAdverts ($page, $nbPerPage)
{
  $query = $this->createQueryBuilder('a')
    // jointure sur l'attribut image
    ->leftJoin('a.image', 'i')
    ->addSelect('i')
    // jointure sur l'attribut categories
    ->leftJoin('a.categories', 'c')
    ->addSelect('c')
    ->orderBy('a.date', 'DESC')
    ->getQuery();


  $query
    ->setFirstResult(($page-1) * $nbPerPage)
    ->setMaxResults($nbPerPage);

    return new Paginator($query, true);
}

}
